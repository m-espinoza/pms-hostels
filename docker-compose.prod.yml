services:

  web:
    build: ./docker/cobra_system
    container_name: web
    env_file:
      - ./.env
    restart: always 
    volumes:
      - ./public/sistema_cobranza:/home/sistema_cobranza
    command: gunicorn --bind 0.0.0.0:${SYSTEM_PORT} sistema_cobranza.wsgi
    depends_on:
      - db
    networks:
      - red-interna    
    labels:
      - "traefik.enable=false"    


  db:
    env_file:
      - ./.env
    image: postgres:${POSTGRES_VERSION}
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_PASSWORD: ${PASS}
      POSTGRES_DB: ${DATABASE}
      TZ: ${TZ}
      PGTZ: ${TZ}
    restart: always 
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - red-interna
    labels:
      - "traefik.enable=false"


  server:
    image: nginx:${NGINX_VERSION}
    container_name: server
    restart: always
    environment:
      - TZ=${TZ}
    expose:
      - ${NGINX_PORT}
    volumes:
      - ./public/sistema_cobranza/staticfiles:/home/sistema_cobranza/staticfiles
      - ./docker/nginx/error.log:/var/log/nginx/error.log
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
      - db
    networks:
      - red-interna
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.server.rule=Host(`${SUBDOMAIN}.${DOMAIN}`) 
      - traefik.http.routers.server.entrypoints=websecure
      - traefik.http.routers.server.tls=true
      - traefik.http.routers.server.tls.certresolver=myresolver     
      - traefik.docker.network=${TRAEFIK_DOCKER_NETWORK}


volumes:
  db-data:
